name: Solar System Workflow

# difference between continue-on-error and if failure() is that continue-on-error will providfe a pass on the job summary

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
    
env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        name: Unit Testing


        # It is a private docker container. You can access environment variables. E.g in app.js process.env.variablename

        # services:
        #   mongo-db:
        #     image: siddharth67/mongo-db:non-prod
        #     ports:
        #       - 27017:27017
        # env:
        #   MONGO_URI: 'mongodb://localhost:27017/superData'
        #   MONGO_USERNAME: non-prod-user
        #   MONGO_PASSWORD: non-prod-password

        strategy:
          matrix:
            nodejs_version: [18, 20]
            operating_system: [ubuntu-latest]
            exclude:
              - nodejs_version: 18
                operating_system: macos-latest

        runs-on: ${{ matrix.operating_system }}
        steps:

        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - ${{ matrix.nodejs_version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.nodejs_version }}

            # Caching the package-lock.json so that for subsequence workflows, we do not need to reinstall the packages. npm install will run faster
        - name: Composite Action - Cache & Install NPM Packages
          uses: ./.github/workflows/custom-actions/npm-action
          with:
            path-of-folder: node_modules

    
        - name: Unit Testing
          id: nodejs-unit-testing-step
          run: npm test

# can access the artifact on github actions summary page
        # - name: Archive Test Result

          # if success()  - by default all steps status check is success() unless stated
          # if failure() - will run if previous step fails
          # if always() - will always run regardless if previous step fails/pass

          # if always()
          # uses: actions/upload-artifact@v4
          # with:
          #   name: Mocha-Test-Result
          #   path: test-results.xml

    code-coverage:
      name: Code Coverage
      container:
        image: node:18


      services:
        mongo-db:
          image: siddharth67/mongo-db:non-prod
          # ports:    -- Job and service container uses the same user-define bridge network. Exposes all ports to each other, don't need to map ports
          #   - 27017:27017
          options: 
            --name mongo

      env:
        MONGO_URI: 'mongodb://mongo:27017/superData'
        MONGO_USERNAME: non-prod-user
        MONGO_PASSWORD: non-prod-password



      runs-on: ubuntu-latest
      
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4


        # Not needed as we will be running the job in a nodejs container  
        # - name: Setup Node.js Version - 18
        #   uses: actions/setup-node@v3
        #   with:
        #     node-version: 18

         # Caching the package-lock.json so that for subsequence workflows, we do not need to reinstall the packages. npm install will run faster
        - name: Composite Action - Cache & Install NPM Packages
          uses: ./.github/workflows/custom-actions/npm-action
          with:
            path-of-folder: node_modules

        - name: Check Code Coverage
          continue-on-error: true  # can be used to continue with the other jobs / steps (depending on which level) even when it fails 
          run: npm run coverage

        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5


    reports-s3:
        needs: [code-coverage, unit-testing]
        name: AWS S3 - Upload Reports
        runs-on: ubuntu-latest
        continue-on-error: true
        steps:
          - name: Download Mocha Test Artifact
            uses: actions/download-artifact@v4
            with:
              name: Mocha-Test-Result

          - name: Download Code Coverage Artifact
            uses: actions/download-artifact@v4
            with:
              name: Code-Coverage-Result

          - name: Merge Test Files
            run: |
              ls -ltr
              mkdir reports-${{ github.sha }}
              mv cobertura-coverage.xml reports-${{ github.sha }}/
              mv test-results.xml reports-${{ github.sha }}/
              ls -ltr reports-${{ github.sha }}/

          - name: Upload to AWS S3
            # uses: jakejarvis/s3-sync-action@master
            # with:
            #   args: --follow-symlinks --delete
            # env:
            #   AWS_S3_BUCKET: solar-system-reports-bucket
            #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID } }
            #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY } }
            #   AWS_REGION: us-east-1
            #   SOURCE_DIR: 'reports-${{ github.sha } }'
            #   DEST_DIR: 'reports-${{ github.sha } }'
            run: echo " Uploading to AWS"

    docker:
      

      name: Containerization
      needs: [code-coverage, unit-testing]
      # giving write access to the github token.Although i think default permission should be read but i was able to create the package without this 
      permissions:
        packages: write

      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Dockerhub Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: GHCR Login
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }} # This GITHUB TOKEN is automatically created and part of secrets during workflow jobs. By default has READ permissions

      - name: Docker Build For Testing
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

      - name: Docker Image Testing
        run: |
          docker images
          docker run --name solar-system-app -d \
            -p 3000:3000 \
            -e MONGO_URI=$MONGO_URI \
            -e MONGO_USERNAME=$MONGO_USERNAME \
            -e MONGO_PASSWORD=$MONGO_PASSWORD \
            ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

          export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
          echo $IP

          echo Testing Image URL using wget
          wget -q -O - 127.0.0.1:3000/live | grep live

      - name: Container Registry Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: | 
            ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
            ghcr.io/hongming200/solar-system:${{ github.sha }}


    slack-notification:
      #Will still run even when workflow is cancelled
      if: always() 
      name: Slack Notification
      # Ideally should be after dev/prod integration test
      needs: [docker]
      continue-on-error: true
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Slack Notification
          uses: rtCamp/action-slack-notify@v2
          env:
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
            SLACK_CHANNEL: github-actions-channel
            SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
            # SLACK_ICON: https://gitlab.com/sidd-harth/solar-system/-/raw/main/images/saturn.png
            SLACK_MESSAGE: ':hammer_and_wrench: Triggered by ${{ github.actor }}'
            SLACK_TITLE: Information

